<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>Kisan Sathi | рдХрд┐рд╕рд╛рди рд╕рд╛рдереА</title>

<!-- Minimal Bootstrap-like CSS (offline) -->
<style>
  :root {
    --primary:#0d6efd; --success:#198754; --warning:#ffc107; --danger:#dc3545;
    --bg:#f7fafc; --card:#ffffff; --text:#1f2937; --muted:#6b7280; --shadow:0 8px 24px rgba(0,0,0,.08);
    --radius:18px;
  }
  *{box-sizing:border-box}
  html,body{margin:0;padding:0;background:var(--bg);color:var(--text);font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif}
  a{color:inherit;text-decoration:none}
  .container{width:100%;max-width:980px;margin:0 auto;padding:16px}
  .row{display:flex;flex-wrap:wrap;margin:-8px}
  .col{padding:8px;flex:1 0 0}
  .col-12{flex:0 0 100%;max-width:100%}
  @media(min-width:768px){.col-md-6{flex:0 0 50%;max-width:50%}}
  .card{background:var(--card);border-radius:var(--radius);box-shadow:var(--shadow);padding:16px}
  .header{padding:20px 16px 8px;text-align:center}
  .title{font-size:28px;font-weight:800;line-height:1.1;margin:0}
  .subtitle{font-size:14px;color:var(--muted);margin-top:6px}
  .btn{display:inline-flex;align-items:center;justify-content:center;gap:8px;border:0;border-radius:16px;padding:14px 18px;font-weight:700;cursor:pointer;box-shadow:var(--shadow);transition:transform .08s ease,filter .2s ease;width:100%}
  .btn:active{transform:translateY(1px)}
  .btn-lg{padding:18px 20px;font-size:18px}
  .btn-primary{background:var(--primary);color:#fff}
  .btn-success{background:var(--success);color:#fff}
  .btn-secondary{background:#111827;color:#fff}
  .btn-outline{background:#fff;color:var(--primary);border:2px solid var(--primary)}
  .grid2{display:grid;grid-template-columns:1fr;gap:12px}
  @media(min-width:720px){.grid2{grid-template-columns:repeat(2,1fr)}}
  .label{font-weight:700;margin-bottom:6px}
  select,input{width:100%;padding:12px 14px;border-radius:12px;border:1px solid #e5e7eb;background:#fff;font-size:16px}
  .pill{display:inline-flex;align-items:center;gap:8px;padding:8px 12px;border-radius:999px;background:#eef2ff;font-weight:700;font-size:14px}
  .section{display:none}
  .section.active{display:block}
  .spacer{height:10px}
  .muted{color:var(--muted)}
  .footer{padding:24px;text-align:center;font-size:12px;color:var(--muted)}
  .hero-buttons{display:grid;grid-template-columns:1fr;gap:14px;margin-top:14px}
  @media(min-width:640px){.hero-buttons{grid-template-columns:1fr 1fr}}
  .chip{font-size:12px;background:#f1f5f9;color:#111827;border-radius:999px;padding:4px 10px;display:inline-block}
  .tip{border-left:4px solid var(--success);padding:12px 14px;background:#ecfdf5;border-radius:12px}
  .warn{border-left:4px solid var(--warning);padding:12px 14px;background:#fffbeb;border-radius:12px}
  .danger{border-left:4px solid var(--danger);padding:12px 14px;background:#fef2f2;border-radius:12px}
  .icon{font-size:20px}
  .nav{display:flex;gap:8px;margin-bottom:14px;flex-wrap:wrap}
  .backbtn{cursor:pointer;display:inline-flex;align-items:center;gap:8px}
  .divider{height:1px;background:#e5e7eb;margin:12px 0}
</style>
</head>
<body>
  <header class="header">
    <div class="container">
      <h1 class="title">Kisan Sathi &middot; рдХрд┐рд╕рд╛рди рд╕рд╛рдереА</h1>
      <p class="subtitle">Farmer-friendly crop advice & weatherтАФon your phone.</p>
    </div>
  </header>

  <main class="container">
    <!-- Home -->
    <section id="home" class="section active">
      <div class="card">
        <div class="grid2">
          <div>
            <div class="pill">ЁЯУ▓ Mobile-Friendly ┬╖ рдмрдбрд╝рд╛ рдлрд╝реЙрдиреНрдЯ</div>
            <h2 style="margin:12px 0 6px;">Welcome / рд╕реНрд╡рд╛рдЧрдд рд╣реИ</h2>
            <p class="muted">Choose a service below. рдиреАрдЪреЗ рд╕реЗрд╡рд╛ рдЪреБрдиреЗрдВ:</p>
            <div class="hero-buttons">
              <button id="goAdvisory" class="btn btn-success btn-lg" aria-label="Crop Advisory">
                ЁЯМ╛ <span>Crop Advisory ┬╖ рдлрд╝рд╕рд▓ рд╕рд▓рд╛рд╣</span>
              </button>
              <button id="goWeather" class="btn btn-primary btn-lg" aria-label="Weather Updates">
                тЫЕ <span>Weather Updates ┬╖ рдореМрд╕рдо</span>
              </button>
            </div>
            <div class="spacer"></div>
            <div class="tip">ЁЯТб рд╕реБрдЭрд╛рд╡: рдиреЗрдЯрд╡рд░реНрдХ рдирд╣реАрдВ рд╣реИ рддреЛ рднреА рдлрд╝рд╕рд▓ рд╕рд▓рд╛рд╣ рдСрдлрд╝рд▓рд╛рдЗрди рдХрд╛рдо рдХрд░реЗрдЧреАред Weather рдХреЗ рд▓рд┐рдП рдЗрдВрдЯрд░рдиреЗрдЯ рдЪрд╛рд╣рд┐рдПред</div>
          </div>
          <div class="card" style="background:#f8fafc">
            <h3 style="margin:0 0 8px;">Quick Help / рддреНрд╡рд░рд┐рдд рд╕рд╣рд╛рдпрддрд╛</h3>
            <ul style="margin:0 0 6px 18px">
              <li>рдлрд╝рд╕рд▓ рдЪреБрдиреЗ тЖТ рдмреБрд╡рд╛рдИ рд╕рдордп, рд╕рд┐рдВрдЪрд╛рдИ, рдЦрд╛рдж, рдХреАрдЯ/рд░реЛрдЧ рдкреНрд░рдмрдВрдзрди</li>
              <li>рдореМрд╕рдо рджреЗрдЦреЗрдВ тЖТ рддрд╛рдкрдорд╛рди, рдЖрд░реНрджреНрд░рддрд╛, рдмрд╛рд░рд┐рд╢ рдХреА рд╕рдВрднрд╛рд╡рдирд╛, рд╕рд░рд▓ рд╕рд▓рд╛рд╣</li>
            </ul>
            <span class="chip">рд╣рд┐рдВрджреА рд▓реЗрдмрд▓</span>
            <span class="chip">Large Buttons</span>
            <span class="chip">Offline Crop Data</span>
          </div>
        </div>
      </div>
    </section>

    <!-- Crop Advisory -->
    <section id="advisory" class="section">
      <div class="nav">
        <span class="backbtn" data-back="home">тЖР Back / рд╡рд╛рдкрд╕</span>
      </div>
      <div class="card">
        <h2 style="margin-top:0;">ЁЯМ╛ Crop Advisory ┬╖ рдлрд╝рд╕рд▓ рд╕рд▓рд╛рд╣</h2>
        <div class="row">
          <div class="col col-12 col-md-6">
            <label class="label">Select Crop ┬╖ рдлрд╝рд╕рд▓ рдЪреБрдиреЗрдВ</label>
            <select id="cropSelect" aria-label="Select crop">
              <option value="">-- Choose / рдЪреБрдиреЗрдВ --</option>
              <option value="wheat">Wheat ┬╖ рдЧреЗрд╣реВрдБ</option>
              <option value="paddy">Paddy ┬╖ рдзрд╛рди</option>
              <option value="maize">Maize ┬╖ рдордХреНрдХрд╛</option>
            </select>
          </div>
        </div>

        <div id="adviceWrap" style="display:none;margin-top:16px">
          <div class="divider"></div>
          <div class="row">
            <div class="col col-12 col-md-6">
              <div class="card">
                <h3 style="margin:0 0 8px;">ЁЯЧУя╕П Sowing Time ┬╖ рдмреБрд╡рд╛рдИ рд╕рдордп</h3>
                <div id="sowing"></div>
              </div>
            </div>
            <div class="col col-12 col-md-6">
              <div class="card">
                <h3 style="margin:0 0 8px;">ЁЯЪ┐ Irrigation ┬╖ рд╕рд┐рдВрдЪрд╛рдИ</h3>
                <div id="irrigation"></div>
              </div>
            </div>
            <div class="col col-12 col-md-6">
              <div class="card">
                <h3 style="margin:0 0 8px;">ЁЯзк Fertilizer ┬╖ рдЦрд╛рдж рд╕рд┐рдлрд╛рд░рд┐рд╢</h3>
                <div id="fertilizer"></div>
              </div>
            </div>
            <div class="col col-12 col-md-6">
              <div class="card">
                <h3 style="margin:0 0 8px;">ЁЯРЫ Pest/Disease ┬╖ рдХреАрдЯ/рд░реЛрдЧ</h3>
                <div id="pest"></div>
              </div>
            </div>
          </div>
          <div class="spacer"></div>
          <div class="tip">тД╣я╕П рдпреЗ рдбреЗрдЯрд╛ рдбреЗрдореЛ (рдирдореВрдирд╛) JSON рд╕реЗ рд╣реИтАФрд╕реНрдерд╛рдиреАрдп рдХреГрд╖рд┐ рд╡рд┐рднрд╛рдЧ/рдХреГрд╖рд┐ рд╡рд┐рд╢реНрд╡рд╡рд┐рджреНрдпрд╛рд▓рдп рдХреА рд╕рд▓рд╛рд╣ рдХрд╛ рдкрд╛рд▓рди рдХрд░реЗрдВред</div>
        </div>
      </div>
    </section>

    <!-- Weather Updates -->
    <section id="weather" class="section">
      <div class="nav">
        <span class="backbtn" data-back="home">тЖР Back / рд╡рд╛рдкрд╕</span>
      </div>
      <div class="card">
        <h2 style="margin-top:0;">тЫЕ Weather Updates ┬╖ рдореМрд╕рдо</h2>
        <div class="row">
          <div class="col col-12 col-md-6">
            <button id="locBtn" class="btn btn-primary btn-lg">ЁЯУН Use My Location ┬╖ рдореЗрд░реА рд▓реЛрдХреЗрд╢рди</button>
          </div>
          <div class="col col-12 col-md-6">
            <div class="label">Or enter city ┬╖ рд╢рд╣рд░ рджрд░реНрдЬ рдХрд░реЗрдВ</div>
            <div class="row" style="gap:8px">
              <div class="col col-12" style="padding:0">
                <input id="cityInput" placeholder="e.g., Ramnagar, Dehradun" />
              </div>
              <div class="col col-12" style="padding:0">
                <button id="cityBtn" class="btn btn-outline">ЁЯФН Fetch Weather</button>
              </div>
            </div>
          </div>
        </div>

        <div id="wxResult" style="display:none;margin-top:16px">
          <div class="divider"></div>
          <div class="row">
            <div class="col col-12 col-md-6">
              <div class="card">
                <h3 style="margin:0 0 8px;">Current Weather ┬╖ рд╡рд░реНрддрдорд╛рди рдореМрд╕рдо</h3>
                <div id="wxNow"></div>
              </div>
            </div>
            <div class="col col-12 col-md-6">
              <div class="card">
                <h3 style="margin:0 0 8px;">Advice ┬╖ рд╕рд▓рд╛рд╣</h3>
                <div id="wxAdvice" class="tip"></div>
              </div>
            </div>
          </div>
          <p class="muted" style="margin-top:8px">Source: OpenWeatherMap</p>
        </div>
        <div id="wxError" style="display:none;margin-top:12px" class="danger">тЪая╕П Could not fetch weather. Check internet or API key.</div>
        <div class="warn" style="margin-top:12px">
          ЁЯФС <b>API Key:</b> Open this file in a text editor and replace <code>YOUR_OPENWEATHERMAP_API_KEY</code> with your key.
        </div>
      </div>
    </section>
  </main>

  <footer class="footer">┬й <span id="year"></span> Kisan Sathi ┬╖ Built for farmers ┬╖ рдХрд┐рд╕рд╛рдиреЛрдВ рдХреЗ рд▓рд┐рдП</footer>

<script>
/* ---------- Simple Router ---------- */
const sections = {
  home: document.getElementById('home'),
  advisory: document.getElementById('advisory'),
  weather: document.getElementById('weather')
};
function showSection(id){
  Object.values(sections).forEach(s=>s.classList.remove('active'));
  sections[id].classList.add('active');
  window.scrollTo({top:0,behavior:'smooth'});
}
document.getElementById('goAdvisory').addEventListener('click',()=>showSection('advisory'));
document.getElementById('goWeather').addEventListener('click',()=>showSection('weather'));
document.querySelectorAll('.backbtn').forEach(b=>b.addEventListener('click',e=>showSection(e.currentTarget.dataset.back)));
document.getElementById('year').textContent = new Date().getFullYear();

/* ---------- Sample Crop Data (JSON) ---------- */
const cropData = {
  "wheat": {
    "name":"Wheat ┬╖ рдЧреЗрд╣реВрдБ",
    "sowing":"рдЕрдХреНрдЯреВрдмрд░тАУрдирд╡рдВрдмрд░ (рд░рдмреА)ред рд╣рд▓реНрдХреА/рдордзреНрдпрдо рджреЛрдордЯ рдорд┐рдЯреНрдЯреАред",
    "irrigation":[
      "рдкрд╣рд▓реА рд╕рд┐рдВрдЪрд╛рдИ: рдмреБрд╡рд╛рдИ рдХреЗ 20тАУ25 рджрд┐рди рдмрд╛рдж (CRI).",
      "рдЕрдЧрд▓реА рд╕рд┐рдВрдЪрд╛рдИ: 40тАУ45, 60тАУ65, 80тАУ85, рдФрд░ рджреВрдз рднрд░рд╛рд╡ рдЪрд░рдг рдкрд░ред"
    ],
    "fertilizer":[
      "N:P:K = 120:60:40 рдХрд┐рдЧреНрд░рд╛/рд╣реЗрдХреНрдЯреЗрдпрд░ (рдорд┐рдЯреНрдЯреА рдХреЗ рдЕрдиреБрд╕рд╛рд░ рд╕рдорд╛рдпреЛрдЬрд┐рдд)ред",
      "рдмреАрдЬреЛрдкрдЪрд╛рд░: рдХрд╛рд░реНрдмреЗрдиреНрдбрд╛рдЬрд╝рд┐рдо 2g/рдХрд┐рдЧреНрд░рд╛ рдмреАрдЬред"
    ],
    "pest":[
      "рджреАрдордХ/рддрдирд╛ рднреЗрджрдХ: рдХреНрд▓реЛрд░рдкрд╛рдЗрд░реАрдлреЙрд╕ рдорд┐рдЯреНрдЯреА рдЙрдкрдЪрд╛рд░ред",
      "рдХрд░рдирд╛рд▓ рдмрдВрдЯ: рдкреНрд░рдорд╛рдгрд┐рдд/рдЙрдкрдЪрд╛рд░рд┐рдд рдмреАрдЬ, рд░реЛрдЧрдЧреНрд░рд╕реНрдд рдмрд╛рд▓рд┐рдпреЛрдВ рдХреЛ рдирд╖реНрдЯ рдХрд░реЗрдВред"
    ]
  },
  "paddy": {
    "name":"Paddy ┬╖ рдзрд╛рди",
    "sowing":"рдЬреВрдитАУрдЬреБрд▓рд╛рдИ (рдЦрд░реАрдл) / рдЬрдирд╡рд░реАтАУрдлрд░рд╡рд░реА (рд░рдмреА, рджрдХреНрд╖рд┐рдг рднрд╛рд░рдд)ред",
    "irrigation":[
      "рд░реЛрдкрд╛рдИ рдХреЗ рдмрд╛рдж 2тАУ3 рд╕реЗрдореА рдкрд╛рдиреА, рддрдирд╛ рдмреЭрд╡рд╛рд░ рдореЗрдВ 5тАУ7 рд╕реЗрдореА рд╕реНрдерд┐рд░ рдЬрд▓ред",
      "рджреВрдз рднрд░рд╛рд╡ рд╡ рдмрд╛рд▓рд┐рдпрд╛рдБ рдирд┐рдХрд▓рддреЗ рд╕рдордп рдирдореА рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдХрд░реЗрдВред"
    ],
    "fertilizer":[
      "N:P:K = 100:50:50 рдХрд┐рдЧреНрд░рд╛/рд╣реЗрдХреНрдЯреЗрдпрд░ (рдХреНрд╖реЗрддреНрд░ рдХреЗ рдЕрдиреБрд╕рд╛рд░)ред",
      "рдЬрд┐рдВрдХ рд╕рд▓реНрдлреЗрдЯ 25 рдХрд┐рдЧреНрд░рд╛/рд╣реЗрдХреНрдЯреЗрдпрд░ рдЬрд╣рд╛рдБ рдХрдореА рд╣реЛред"
    ],
    "pest":[
      "рднреВрд░рд╛ рдлреБрджрдХрд╛/рддрдирд╛ рдЫреЗрджрдХ: рдлреЗрд░реЛрдореЛрди рдЯреНрд░реИрдк, рдЕрдиреБрд╢рдВрд╕рд┐рдд рдХреАрдЯрдирд╛рд╢реА рдХрд╛ рд╡рд┐рд╡реЗрдХрдкреВрд░реНрдг рдЙрдкрдпреЛрдЧред",
      "рдмреНрд▓рд╛рд╕реНрдЯ рд░реЛрдЧ: рдкреНрд░рддрд┐рд░реЛрдзреА рдХрд┐рд╕реНрдореЗрдВ, рдЯреНрд░рд╛рдЗрд╕реАрдХреНрд▓рд╛рдЬрд╝реЛрд▓ рд╕реНрдкреНрд░реЗ (рдЬрд░реВрд░рдд рдкрд░)ред"
    ]
  },
  "maize": {
    "name":"Maize ┬╖ рдордХреНрдХрд╛",
    "sowing":"рдордИтАУрдЬреВрди (рдЦрд░реАрдл) / рдЕрдХреНрдЯреВрдмрд░тАУрдирд╡рдВрдмрд░ (рд░рдмреА) / рдлрд░рд╡рд░реА (рдЧреНрд░реАрд╖реНрдо)ред",
    "irrigation":[
      "рдордХрдИ рдХреЗ рд▓рд┐рдП рдорд╣рддреНрддреНрд╡рдкреВрд░реНрдг рдЪрд░рдг: рдШреБрдЯрдирд╛, рд░реЗрд╢рдо, рджрд╛рдирд╛ рднрд░рд╛рд╡ред",
      "рдЬрд▓ рднрд░рд╛рд╡ рд╕реЗ рдмрдЪреЗрдВ; рд╣рд▓реНрдХреА рдкрд░рдВрддреБ рдирд┐рдпрдорд┐рдд рд╕рд┐рдВрдЪрд╛рдИред"
    ],
    "fertilizer":[
      "N:P:K = 120:60:40 рдХрд┐рдЧреНрд░рд╛/рд╣реЗрдХреНрдЯреЗрдпрд░; N рдХреЛ рд╡рд┐рднрд╛рдЬрд┐рдд рдЦреБрд░рд╛рдХ рдореЗрдВ рджреЗрдВред",
      "рдЬрд┐рдВрдХ рдХреА рдХрдореА рдкрд░ ZnSOтВД 25 рдХрд┐рдЧреНрд░рд╛/рд╣реЗрдХреНрдЯреЗрдпрд░ред"
    ],
    "pest":[
      "рдлреЙрд▓ рдЖрд░реНрдореАрд╡рд░реНрдо: рдирд┐рдпрдорд┐рдд рдирд┐рдЧрд░рд╛рдиреА, рдлреЗрд░реЛрдореЛрди рдЯреНрд░реИрдк, рдЕрдиреБрд╢рдВрд╕рд┐рдд рдЬреИрд╡рд┐рдХ/рд░рд╛рд╕рд╛рдпрдирд┐рдХ рдирд┐рдпрдВрддреНрд░рдгред",
      "рддрдирд╛ рдЫреЗрджрдХ: рд╕рдордп рдкрд░ рдмреБрд╡рд╛рдИ рдФрд░ рдЕрд╡рд╢реЗрд╖ рдкреНрд░рдмрдВрдзрдиред"
    ]
  }
};

/* ---------- Populate Crop Advisory ---------- */
const cropSelect = document.getElementById('cropSelect');
const adviceWrap = document.getElementById('adviceWrap');
const sowingEl = document.getElementById('sowing');
const irrigationEl = document.getElementById('irrigation');
const fertilizerEl = document.getElementById('fertilizer');
const pestEl = document.getElementById('pest');

function listify(arr){
  if(Array.isArray(arr)){
    return '<ul style="margin:0 0 0 18px">' + arr.map(i=>`<li>${i}</li>`).join('') + '</ul>';
  }
  return `<p>${arr}</p>`;
}

cropSelect.addEventListener('change', ()=>{
  const key = cropSelect.value;
  if(!key){ adviceWrap.style.display='none'; return; }
  const d = cropData[key];
  if(!d){ adviceWrap.style.display='none'; return; }
  sowingEl.innerHTML = `<p><b>${d.name}</b></p>${listify(d.sowing)}`;
  irrigationEl.innerHTML = listify(d.irrigation);
  fertilizerEl.innerHTML = listify(d.fertilizer);
  pestEl.innerHTML = listify(d.pest);
  adviceWrap.style.display = 'block';
});

/* ---------- Weather: OpenWeatherMap ---------- */
const OWM_KEY = 'bd47a729ab9558c2c28aa44f99c4dc00;
const wxNowEl = document.getElementById('wxNow');
const wxAdviceEl = document.getElementById('wxAdvice');
const wxResult = document.getElementById('wxResult');
const wxError = document.getElementById('wxError');
const locBtn = document.getElementById('locBtn');
const cityBtn = document.getElementById('cityBtn');
const cityInput = document.getElementById('cityInput');

async function fetchJSON(url){
  const r = await fetch(url);
  if(!r.ok) throw new Error('HTTP '+r.status);
  return r.json();
}

// Build advice from weather
function makeAdvice({tempC, humidity, pop, rainMM}){
  // Simple rules:
  // High rain prob or rain volume тЖТ avoid irrigation
  // Very hot & dry тЖТ recommend light irrigation
  // Otherwise normal maintenance
  if((pop !== null && pop >= 0.6) || (rainMM !== null && rainMM > 0)){
    wxAdviceEl.className = 'danger';
    return 'ЁЯМзя╕П рдмрд╛рд░рд┐рд╢ рдХреА рд╕рдВрднрд╛рд╡рдирд╛ рдЬреНрдпрд╛рджрд╛ рд╣реИ тАФ рд╕рд┐рдВрдЪрд╛рдИ рдЯрд╛рд▓реЗрдВ / Avoid irrigation & prepare drainage.';
  }
  if(tempC >= 35 && humidity < 35){
    wxAdviceEl.className = 'warn';
    return 'ЁЯе╡ рдЧрд░реНрдо рд╡ рд╢реБрд╖реНрдХ рдореМрд╕рдо тАФ рд╣рд▓реНрдХреА рд╕рд┐рдВрдЪрд╛рдИ/рдорд▓реНрдЪрд┐рдВрдЧ рдХрд░реЗрдВ, рджреЛрдкрд╣рд░ рдХрд╛ рдХрд╛рдо рдХрдо рдХрд░реЗрдВред';
  }
  wxAdviceEl.className = 'tip';
  return 'тЬЕ рдореМрд╕рдо рд╕рд╛рдорд╛рдиреНрдп тАФ рдирд┐рдпрдорд┐рдд рдирд┐рдЧрд░рд╛рдиреА рдФрд░ рд╕рд╛рдорд╛рдиреНрдп рд░рдЦрд░рдЦрд╛рд╡ рдХрд░реЗрдВред';
}

function fmt(num, unit){ return num==null ? 'тАФ' : `${num}${unit}`; }

function showWeatherCard({place, tempC, humidity, pop, rainMM, desc}){
  wxResult.style.display='block';
  wxError.style.display='none';
  wxNowEl.innerHTML = `
    <div class="grid2">
      <div><div class="label">ЁЯУМ рд╕реНрдерд╛рди</div><div>${place}</div></div>
      <div><div class="label">ЁЯМбя╕П рддрд╛рдкрдорд╛рди</div><div>${fmt(tempC.toFixed(1),'┬░C')}</div></div>
      <div><div class="label">ЁЯТз рдЖрд░реНрджреНрд░рддрд╛</div><div>${fmt(humidity,'%')}</div></div>
      <div><div class="label">тШФ рдмрд╛рд░рд┐рд╢ рдХреА рд╕рдВрднрд╛рд╡рдирд╛ (POP)</div><div>${pop===null?'тАФ':Math.round(pop*100)+'%'}</div></div>
      <div><div class="label">ЁЯМзя╕П рдЕрдиреБрдорд╛рдирд┐рдд рд╡рд░реНрд╖рд╛</div><div>${rainMM===null?'тАФ':rainMM+' mm'}</div></div>
      <div><div class="label">ЁЯУЭ рд╡рд┐рд╡рд░рдг</div><div style="text-transform:capitalize">${desc||'тАФ'}</div></div>
    </div>
  `;
  wxAdviceEl.textContent = makeAdvice({tempC, humidity, pop, rainMM});
}

async function getWeatherByCoords(lat, lon){
  const base = 'https://api.openweathermap.org/data/2.5';
  const u1 = `${base}/weather?lat=${lat}&lon=${lon}&appid=${OWM_KEY}&units=metric`;
  const u2 = `${base}/forecast?lat=${lat}&lon=${lon}&appid=${OWM_KEY}&units=metric&cnt=3`;
  const [now, fc] = await Promise.all([fetchJSON(u1), fetchJSON(u2)]);
  const tempC = now.main?.temp ?? null;
  const humidity = now.main?.humidity ?? null;
  const desc = now.weather?.[0]?.description ?? '';
  // Use first forecast block for POP; fall back if absent
  const first = fc.list?.[0] || {};
  const pop = (typeof first.pop === 'number') ? first.pop : null;
  const rainMM = (first.rain && (first.rain['3h'] || first.rain['1h'])) ? (first.rain['3h'] || first.rain['1h']) : (now.rain?.['1h'] ?? null);
  const place = `${now.name || 'Your area'} (${lat.toFixed(2)}, ${lon.toFixed(2)})`;
  showWeatherCard({place, tempC, humidity, pop, rainMM, desc});
}

async function getWeatherByCity(city){
  // First geocode the city via current weather endpoint (gets coord), then reuse coords for POP
  const base = 'https://api.openweathermap.org/data/2.5';
  const u = `${base}/weather?q=${encodeURIComponent(city)}&appid=${OWM_KEY}&units=metric`;
  const now = await fetchJSON(u);
  return getWeatherByCoords(now.coord.lat, now.coord.lon);
}

/* Event handlers */
locBtn.addEventListener('click', ()=>{
  wxResult.style.display='none'; wxError.style.display='none';
  if(!navigator.geolocation){
    wxError.style.display='block'; wxError.textContent='тЪая╕П Geolocation not supported on this device.';
    return;
  }
  navigator.geolocation.getCurrentPosition(
    pos => getWeatherByCoords(pos.coords.latitude, pos.coords.longitude).catch(err=>{
      wxError.style.display='block'; wxError.textContent='тЪая╕П Weather fetch failed: '+err.message;
    }),
    err => { wxError.style.display='block'; wxError.textContent='тЪая╕П Location error: '+err.message; },
    {enableHighAccuracy:true, timeout:12000, maximumAge:60000}
  );
});

cityBtn.addEventListener('click', ()=>{
  const city = cityInput.value.trim();
  if(!city){ cityInput.focus(); return; }
  wxResult.style.display='none'; wxError.style.display='none';
  getWeatherByCity(city).catch(err=>{
    wxError.style.display='block'; wxError.textContent='тЪая╕П Weather fetch failed: '+err.message;
  });
});
</script>
</body>
</html>
